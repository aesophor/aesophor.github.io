{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"leetcode, linked-list\" tag",
    "description": "{software,reverse} engineer",
    "home_page_url": "https://aesophor.github.io",
    "items": [
        {
            "id": "https://aesophor.github.io/2022/08/21/LC-0002-Add-Two-Numbers/",
            "url": "https://aesophor.github.io/2022/08/21/LC-0002-Add-Two-Numbers/",
            "title": "LC#0002 - Add Two Numbers",
            "date_published": "2022-08-21T08:55:18.000Z",
            "content_html": "<h1 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h1><p>給定兩條 singly linked lists：<code>l1</code> 和 <code>l2</code></p>\n<p>一條 linked list 代表一個數，比如 [3, 4, 5] 這樣的 linked list 表示數字 543。</p>\n<p>請將 <code>l1</code> 和 <code>l2</code> 所代表的數相加，然後依樣畫葫蘆製作一條全新的 linked list 回傳兩數之和。</p>\n<h1 id=\"Examples\"><a href=\"#Examples\" class=\"headerlink\" title=\"Examples\"></a>Examples</h1><blockquote>\n<p>記得和考官確認 input linked list 是否可能為空</p>\n</blockquote>\n<pre><code>Input: l1 = [2,4,3], l2 = [5,6,4]\nOutput: [7,0,8]\nExplanation: 342 + 465 = 807.\n</code></pre>\n<pre><code>Input: l1 = [0], l2 = [0]\nOutput: [0]\n</code></pre>\n<pre><code>Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\nOutput: [8,9,9,9,0,0,0,1]\n</code></pre>\n<h1 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h1><p>同時 traverse 兩條 linked lists，將目前走到的兩個節點的 value 做相加，並且記得處理進位。</p>\n<pre><code class=\"cpp\">/**\n * Definition for singly-linked list.\n * struct ListNode &#123;\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) &#123;&#125;\n *     ListNode(int x) : val(x), next(nullptr) &#123;&#125;\n *     ListNode(int x, ListNode *next) : val(x), next(next) &#123;&#125;\n * &#125;;\n */\nclass Solution &#123;\n public:\n  ListNode *addTwoNumbers(const ListNode *l1, const ListNode *l2) &#123;\n    bool carry = false;\n    int digit = 0;\n    \n    ListNode *head = nullptr;\n    ListNode *tail = nullptr;\n\n    while (l1 || l2 || carry) &#123;\n      digit = 0;\n      if (carry) &#123;\n        digit += 1;\n        carry = false;\n      &#125;\n      if (l1) &#123;\n        digit += l1-&gt;val;\n        l1 = l1-&gt;next;\n      &#125;\n      if (l2) &#123;\n        digit += l2-&gt;val;\n        l2 = l2-&gt;next;\n      &#125;\n      if (digit &gt;= 10) &#123;\n        digit -= 10;\n        carry = true;\n      &#125;\n      \n      ListNode *node = new ListNode(digit);\n      if (!head) &#123;\n        head = node;\n      &#125; else &#123;\n        tail-&gt;next = node;\n      &#125;\n      tail = node;\n    &#125;\n\n    return head;\n  &#125;\n&#125;;\n</code></pre>\n<h1 id=\"Complexity-Analysis\"><a href=\"#Complexity-Analysis\" class=\"headerlink\" title=\"Complexity Analysis\"></a>Complexity Analysis</h1><p>假設 l1 長度為 <code>m</code>，l2 長度為 <code>n</code></p>\n<ul>\n<li><strong>Time: O(max(m, n))</strong> - 同時 traverse 兩個 list，所需時間為較長者</li>\n<li><strong>Space: O(max(m, n))</strong> - m digits + n digits 最多可能產生一個 (m+n+1) digits 的數</li>\n</ul>\n<h1 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h1><pre><code>Runtime: 46 ms, faster than 74.37% of C++ online submissions for Add Two Numbers.\nMemory Usage: 71.3 MB, less than 90.92% of C++ online submissions for Add Two Numbers.\n</code></pre>\n",
            "tags": [
                "leetcode, linked-list"
            ]
        }
    ]
}