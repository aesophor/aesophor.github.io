<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>software, exploitation, and thoughts • Posts by &#34;linux&#34; tag</title>
        <link>https://aesophor.github.io</link>
        <description></description>
        <language>en</language>
        <pubDate>Mon, 20 Jul 2020 18:48:46 +0800</pubDate>
        <lastBuildDate>Mon, 20 Jul 2020 18:48:46 +0800</lastBuildDate>
        <category>linux</category>
        <item>
            <guid isPermalink="true">https://aesophor.github.io/2020/07/20/0x00-Arch-Linux-on-MacBook-Pro-11-2-with-Custom-NVMe-M-2-SSD/</guid>
            <title>0x00 Arch Linux on MacBook Pro 11,2 with Custom NVMe M.2 SSD</title>
            <link>https://aesophor.github.io/2020/07/20/0x00-Arch-Linux-on-MacBook-Pro-11-2-with-Custom-NVMe-M-2-SSD/</link>
            <category>linux</category>
            <pubDate>Mon, 20 Jul 2020 18:48:46 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;img data-src=&#34;banner.jpg&#34; alt=&#34;banner&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;introduction&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#introduction&#34;&gt;#&lt;/a&gt; Introduction&lt;/h2&gt;
&lt;p&gt;The only laptop I own is Apple’s &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdXBwb3J0LmFwcGxlLmNvbS9rYi9zcDcwND9sb2NhbGU9ZW5fVVM=&#34;&gt;MacBook Pro Retina 15&amp;quot; (late 2014)&lt;/span&gt;,&lt;br&gt;
on which I’ve run Gentoo Linux for about three years. Recently, I replaced my MacBook’s SSD with&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc2Ftc3VuZy5jb20vc2VtaWNvbmR1Y3Rvci9taW5pc2l0ZS9zc2QvcHJvZHVjdC9jb25zdW1lci85NzBldm9wbHVzLw==&#34;&gt;Samsung’s 970 EVO Plus NVMe M.2 SSD (1TB)&lt;/span&gt;&lt;br&gt;
and decided to install Arch Linux on it.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;back-up-the-old-ssd&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#back-up-the-old-ssd&#34;&gt;#&lt;/a&gt; Back Up the Old SSD&lt;/h2&gt;
&lt;p&gt;I booted into a  &lt;code&gt;Gentoo Live USB&lt;/code&gt;  and used  &lt;code&gt;dd&lt;/code&gt;  to back up my entire old SSD to an image file.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;dd&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/dev/sda &lt;span class=&#34;token assign-left variable&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/mnt/external_drive/old_ssd.img &lt;span class=&#34;token assign-left variable&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;4M&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Later on, after the new NVMe M.2 SSD has been installed, I could mount my external hard drive&lt;br&gt;
on  &lt;code&gt;/mnt/external_drive&lt;/code&gt;  and run the following commands to copy all my data from the image file to&lt;br&gt;
the new SSD. The only drawback of this approach is that I have to manually resize the partitions later.&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;dd&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/mnt/external_drive/old_ssd.img &lt;span class=&#34;token assign-left variable&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/dev/nvme0n1 &lt;span class=&#34;token assign-left variable&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;4M&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;h2 id=&#34;firmware-upgrade&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#firmware-upgrade&#34;&gt;#&lt;/a&gt; Firmware Upgrade&lt;/h2&gt;
&lt;p&gt;Before installing NVMe M.2 SSD on your MacBook, make sure that you’ve upgraded to &lt;strong&gt;macOS Mojave&lt;br&gt;
which includes the firmware required to boot from NVMe M.2 SSD&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;ssd-upgrade&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssd-upgrade&#34;&gt;#&lt;/a&gt; SSD Upgrade&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;CAUTION&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Be very careful with the screws. I stripped some of my screws due to the bloated batteries,&lt;br&gt;
and ended up spending $3000 NTD (approx. $100 USD) for repairment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After upgrading to macOS Mojave, your MacBook should be able to recognize NVMe M.2 SSD from now on.&lt;br&gt;
Now we can remove the screws on its back and install the new SSD.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I bought the Screwdrivers + SSD Adapter on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Nob3BlZS50dw==&#34;&gt;shopee.tw&lt;/span&gt; -&amp;gt; &lt;a href=&#34;https://shopee.tw/product/4848951/1501356237&#34;&gt;&lt;strong&gt;Link&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;swap.jpg&#34; alt=&#34;swap&#34;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;ssd-data-migration&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ssd-data-migration&#34;&gt;#&lt;/a&gt; SSD Data Migration&lt;/h2&gt;
&lt;p&gt;After upgrading my MacBook’s SSD, I installed macOS on it and used it for a week. However, being&lt;br&gt;
a long-term GNU/Linux user, I started to miss all that freedom and customizability offered by Linux.&lt;br&gt;
Therefore, I decided to go back to Linux again.&lt;/p&gt;
&lt;p&gt;At first I used  &lt;code&gt;dd&lt;/code&gt;  to clone all my data from the image file to the new SSD. However, this didn’t work&lt;br&gt;
for me, since &lt;strong&gt;I didn’t compile support for NVMe M.2 SSD into my gentoo linux kernel&lt;/strong&gt;,&lt;br&gt;
so although the disk was successfully migrated, I wasn’t able to boot from it.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;prepare-installation-medium&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#prepare-installation-medium&#34;&gt;#&lt;/a&gt; Prepare Installation Medium&lt;/h2&gt;
&lt;p&gt;Instead of trying to recompile a new linux kernel with NVMe M.2 SSD support, I decided to leave&lt;br&gt;
Gentoo Linux this time. Gentoo is a beautiful Linux distribution (if you have time and patience),&lt;br&gt;
but after manually compiling all those packages for 3 years on this fucking MacBook,&lt;br&gt;
I’ve already become kinda fed up with it.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYXJjaGxpbnV4Lm9yZy9kb3dubG9hZC8=&#34;&gt;Download Arch Linux ISO&lt;/span&gt; and prepare Arch Live USB:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;dd&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/path/to/arch.iso &lt;span class=&#34;token assign-left variable&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/dev/sdX &lt;span class=&#34;token assign-left variable&#34;&gt;bs&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;4M&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Power off your MacBook, insert the USB stick, hold  &lt;code&gt;alt/option&lt;/code&gt;  and power it on again.&lt;br&gt;
Now you should see the option to boot from Arch Linux Live USB.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;base-installation&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#base-installation&#34;&gt;#&lt;/a&gt; Base Installation&lt;/h2&gt;
&lt;p&gt;After booting from Arch Linux Live USB, you’ll be logged in as the root user.&lt;br&gt;
To get Internet connection, I simply plugged my Android phone into my Macbook simply via USB cable,&lt;br&gt;
turned on  &lt;code&gt;USB Tethering&lt;/code&gt; , and ran:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ dhcpcd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Ensure the clock is accurate:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ timedatectl set-ntp &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Run  &lt;code&gt;cfdisk /dev/nvme0n1&lt;/code&gt;  and partition the new SSD as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;                                   Disk: /dev/nvme0n1
                 Size: 931.53 GiB, 1000204886016 bytes, 1953525168 sectors
                Label: gpt, identifier: 85CF6A21-FC5C-408D-8532-8751C80F0593

Device                 Start          End        Sectors        Size Type
/dev/nvme0n1p1          2048       411647         409600        200M EFI System             
/dev/nvme0n1p2       411648    1953525134     1953113487      931.3G Linux filesystem
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now run  &lt;code&gt;lsblk&lt;/code&gt;  and you’ll see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NAME               MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT
nvme0n1            259:0    0 931.5G  0 disk  
├─nvme0n1p1        259:1    0   200M  0 part  
└─nvme0n1p2        259:2    0 931.3G  0 part  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Prepare LVM+LUKS on the new SSD:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ cryptsetup -v --cipher aes-xts-plain64 --key-size &lt;span class=&#34;token number&#34;&gt;256&lt;/span&gt; --hash sha1 --iter-time &lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            --use-random --verify-passphrase luksFormat /dev/nvme0n1p2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ cryptsetup luksOpen /dev/nvme0n1p2 lvm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ pvcreate /dev/mapper/lvm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ vgcreate vgcrypt /dev/mapper/lvm&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ lvcreate --size 30G --name root vgcrypt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ lvcreate --extents +100%FREE --name home vgcrypt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ mkfs.fat -F32 /dev/nvme0n1p1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ mkfs.ext4 /dev/mapper/vgcrypt-root&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ mkfs.ext4 /dev/mapper/vgcrypt-home&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Now run  &lt;code&gt;lsblk&lt;/code&gt;  again and you’ll see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NAME               MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT
nvme0n1            259:0    0 931.5G  0 disk  
├─nvme0n1p1        259:1    0   200M  0 part  
└─nvme0n1p2        259:2    0 931.3G  0 part  
  └─vgcrypt        254:0    0 931.3G  0 crypt 
    ├─vgcrypt-root 254:1    0    30G  0 lvm   
    └─vgcrypt-home 254:2    0 901.3G  0 lvm   
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mount the partitions:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt; /dev/mapper/vgcrypt-root /mnt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; -p /mnt/home&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;mkdir&lt;/span&gt; -p /mnt/boot&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt; /dev/mapper/vgcrypt-home /mnt/home&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt; /dev/nvme0n1p1 /mnt/boot&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Install the base system:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ pacstrap -i /mnt base base-devel linux linux-firmware lvm2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Generate fstab:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-L&lt;/code&gt;  generates the fstab with labels instead of UUIDs since we’re using encrypted LVM disk.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;  prevents pseudo-filesystems from being added.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ genfstab -L -p /mnt &lt;span class=&#34;token operator&#34;&gt;&gt;&gt;&lt;/span&gt; /mnt/etc/fstab&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;cat&lt;/span&gt; /mnt/etc/fstab&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;
&lt;h2 id=&#34;configure-the-new-system&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#configure-the-new-system&#34;&gt;#&lt;/a&gt; Configure the New System&lt;/h2&gt;
&lt;p&gt;Chroot into our new system:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ arch-chroot /mnt /bin/bash&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Generate locales:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uncomment the locales you’re going to use in /etc/locale.gen, and run  &lt;code&gt;locale-gen&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;run  &lt;code&gt;echo LANG=en_US.UTF-8 &amp;gt; /etc/locale.conf&lt;/code&gt;  to make ENG UTF-8 the default locale.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Replace the default console font with terminus:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ pacman -S terminus-font&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;FONT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;ter-v24n &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; /etc/vconsole.conf&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Set timezone and set time to UTC:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;ln&lt;/span&gt; -sf /usr/share/zoneinfo/Asia/Taipei /etc/localtime&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ hwclock --systohc --utc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;To ensure the kernel loads the proper modules to decrypt root disk at startup,&lt;br&gt;
we have to add necessary hooks in  &lt;code&gt;/etc/mkinitcpio.conf&lt;/code&gt; :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HOOKS=&amp;quot;base udev autodetect modconf block consolefont encrypt lvm2 filesystems keyboard fsck&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Regenerate the initramfs image to EFI Partition ( &lt;code&gt;/dev/nvme0n1p1&lt;/code&gt; ):&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt; /dev/nvme0n1p1 /boot  &lt;span class=&#34;token comment&#34;&gt;# just in case you forgot to do this&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ mkinitcpio -p linux&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Set hostname:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token builtin class-name&#34;&gt;echo&lt;/span&gt; allegro &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; /etc/hostname&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Install systemd-boot as our bootloader:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ pacman -S dosfstools&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ bootctl --path&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;/boot &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Add an boot entry for systemd-boot by editing  &lt;code&gt;/boot/loader/entries/arch.conf&lt;/code&gt; :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;title	Arch Linux
linux	/vmlinuz-linux
initrd	/initramfs-linux.img
options	cryptdevice=/dev/nvme0n1p2:vgcrypt root=/dev/mapper/vgcrypt-root rw
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Change root user’s password:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;passwd&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Install additional packages:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ pacman -S dhcpcd &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;zsh&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;vim&lt;/span&gt; neovim &lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; stow tmux&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Reboot:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root$ reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add an unprivileged user:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;useradd&lt;/span&gt; --create-home --groups wheel --shell /bin/zsh aesophor&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;root$ &lt;span class=&#34;token function&#34;&gt;passwd&lt;/span&gt; aesophor&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Set up sudo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;run  &lt;code&gt;visudo&lt;/code&gt;  and uncomment the line  &lt;code&gt;%wheel ALL=(ALL) ALL&lt;/code&gt; .&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;At this point, you may logout the root user and re-login with your unprivileged user.&lt;/p&gt;
&lt;br&gt;
&lt;h2 id=&#34;post-installation&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#post-installation&#34;&gt;#&lt;/a&gt; Post Installation&lt;/h2&gt;
&lt;p&gt;Install &lt;a href=&#34;https://github.com/Jguer/yay&#34;&gt; &lt;code&gt;yay&lt;/code&gt; &lt;/a&gt;, an AUR helper:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://aur.archlinux.org/yay.git&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; yay&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; makepkg -si&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Install X and video drivers:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; pacman -S xf86-video-intel mesa-libgl libva-intel-driver libva&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ yay -S opencl-intel&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; pacman -S xorg-server xorg-xinit xorg-apps&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Install  &lt;code&gt;xf86-input-mtrack&lt;/code&gt;  as our trackpad driver:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ yay -S xf86-input-mtrack&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;wget&lt;/span&gt; -O /etc/X11/xorg.conf.d/10-mtrack.conf https://raw.githubusercontent.com/aesophor/macbookpro-11-2-gentoo-config/master/etc/X11/xorg.conf.d/10mtrack.conf&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; gpasswd -a aesophor input&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Install  &lt;code&gt;broadcom-wl-dkms&lt;/code&gt;  as our Wi-Fi driver (my laptop model is A1398):&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; pacman -S dkms broadcom-wl-dkms&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Install  &lt;code&gt;bcwc-pcie-git&lt;/code&gt;  as our FaceTimeHD webcam driver:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ yay -S bcwc-pcie-git&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Install font packages:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; pacman -S ttf-liberation wqy-zenhei wqy-bitmapfont&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ yay -S siji-git uw-ttyp0-font&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Get audio to work:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; pacman -S pulseaudio alsa-lib alsa-utils&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Install DE, WM, bar, etc:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; pacman -S plasma-desktop&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ yay -S wmderland-git polybar dunst picom rofi-git rxvt-unicode firefox&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Install fcitx5 input method:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; pacman -S fcitx5 fcitx5-chinese-addons fcitx5-configtool fcitx5-gtk fcitx5-qt fcitx5-material-color&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ yay -S fcitx5-pinyin-zhwiki&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Downgrade  &lt;code&gt;pango&lt;/code&gt;  to 1.43 since &amp;gt;= 1.44 cause issue with font rendering on rofi:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; pacman -U https://archive.archlinux.org/packages/p/pango/pango-1.43.0-1-x86_64.pkg.tar.xz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Powersaving:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ yay -S powertop thermald cpupower mbpfan-git&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; thermald.service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; cpupower.service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl &lt;span class=&#34;token builtin class-name&#34;&gt;enable&lt;/span&gt; mbpfan.service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Finally, create systemd services that execute the following commands, respectively:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;echo ‘disable’ &amp;gt; /sys/firmware/acpi/interrupts/gpe06  # fix kworker high cpu usage&lt;/li&gt;
&lt;li&gt;echo “XHC1” &amp;gt; /proc/acpi/wakeup  # fix immediate wakeup after suspension on macbook&lt;/li&gt;
&lt;li&gt;setpci -v -H1 -s 00:01.00 BRIDGE_CONTROL=0  # enable keyboard backlight control&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;enter-x11&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#enter-x11&#34;&gt;#&lt;/a&gt; Enter X11&lt;/h2&gt;
&lt;p&gt;Install my dotfiles:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/aesophor/dotfiles.git ~/Dots&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; ~/Dots&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ &lt;span class=&#34;token function&#34;&gt;rm&lt;/span&gt; ~/.zshrc ~/.bashrc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ ./.install.sh&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Start an X11 session (GUI) as your unprivileged user:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user$ startx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;Voilà. Now you can go ahead and start customizing it!&lt;br&gt;
&lt;img data-src=&#34;result.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
