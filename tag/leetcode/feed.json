{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"leetcode\" tag",
    "description": "{software,reverse} engineer",
    "home_page_url": "https://aesophor.github.io",
    "items": [
        {
            "id": "https://aesophor.github.io/2022/08/21/LC-0001-Two-Sums/",
            "url": "https://aesophor.github.io/2022/08/21/LC-0001-Two-Sums/",
            "title": "<LC>#0001 - Two Sums",
            "date_published": "2022-08-21T06:05:49.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>以前刷題總是不寫 writeup，漫無目標的亂刷，導致久了就會忘記解法。最近受到兩位 SQLab 學長的激勵，分別是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iY2xpbi50dy9hYm91dC8=\">Kevin Lin (bclin717)</span> 與 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1RvbW15V3UtZmRna2hka2do\">Tommy Wu (fdgkhdkgh)</span>，決定這輪刷題要養成好習慣：將解題過程記錄下來。</p>\n<h1 id=\"problem\"><a class=\"markdownIt-Anchor\" href=\"#problem\">#</a> Problem</h1>\n<p>給定一串數字  <code>nums</code> ，以及一個目標  <code>target</code> 。</p>\n<p>請從  <code>nums</code>  中找到兩個數字 s.t. 兩數之和為  <code>target</code> ，並回傳那兩數的 index。</p>\n<h1 id=\"example\"><a class=\"markdownIt-Anchor\" href=\"#example\">#</a> Example</h1>\n<p><img data-src=\"fig.png\" alt=\"\"></p>\n<h1 id=\"solution\"><a class=\"markdownIt-Anchor\" href=\"#solution\">#</a> Solution</h1>\n<ol>\n<li>建一個 map：\n<ul>\n<li>key 為目前數字的 complement，即 target - 目前數字</li>\n<li>value 為目前數字的 index</li>\n</ul>\n</li>\n<li>線性掃描  <code>nums</code> ，假設目前掃描到的數字 index 為  <code>i</code> ，檢查 map 中是否存在 key =  <code>nums[i]</code>\n<ul>\n<li>若存在，返回兩個 index： <code>i</code>  與  <code>map[nums[i]]</code></li>\n<li>不存在，對 map 插入 { <code>target - nums[i]</code> ,  <code>i</code> }</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">public</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">twoSum</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> nums<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    std<span class=\"token double-colon punctuation\">::</span>map<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span> complementIdx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>complementIdx<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">,</span> complementIdx<span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        complementIdx<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>target <span class=\"token operator\">-</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"complexity-analysis\"><a class=\"markdownIt-Anchor\" href=\"#complexity-analysis\">#</a> Complexity Analysis</h1>\n<ul>\n<li>Time: O (n) - worst case 需要掃到尾才能找到答案</li>\n<li>Space: O (n) - worst case 同上，map 需要存將近 n 個 entries</li>\n</ul>\n<h1 id=\"result\"><a class=\"markdownIt-Anchor\" href=\"#result\">#</a> Result</h1>\n<pre><code>Runtime: 7 ms, faster than 98.41% of C++ online submissions for Two Sum.\nMemory Usage: 11.2 MB, less than 18.59% of C++ online submissions for Two Sum.\n</code></pre>\n",
            "tags": [
                "leetcode"
            ]
        }
    ]
}