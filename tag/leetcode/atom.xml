<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://aesophor.github.io</id>
    <title> • Posts by &#34;leetcode&#34; tag</title>
    <link href="https://aesophor.github.io" />
    <updated>2022-08-21T06:05:49.000Z</updated>
    <category term="linux" />
    <category term="leetcode" />
    <entry>
        <id>https://aesophor.github.io/2022/08/21/LC-0001-Two-Sums/</id>
        <title>LC#0001 - Two Sums</title>
        <link rel="alternate" href="https://aesophor.github.io/2022/08/21/LC-0001-Two-Sums/"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;以前刷題總是不寫 writeup，漫無目標的亂刷，導致久了就會忘記解法。最近受到兩位 SQLab 學長的激勵，分別是 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iY2xpbi50dy9hYm91dC8=&#34;&gt;Kevin Lin (bclin717)&lt;/span&gt; 與 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1RvbW15V3UtZmRna2hka2do&#34;&gt;Tommy Wu (fdgkhdkgh)&lt;/span&gt;，決定這輪刷題要養成好習慣：將解題過程記錄下來。&lt;/p&gt;
&lt;h1 id=&#34;Problem&#34;&gt;&lt;a href=&#34;#Problem&#34; class=&#34;headerlink&#34; title=&#34;Problem&#34;&gt;&lt;/a&gt;Problem&lt;/h1&gt;&lt;p&gt;給定一串數字 &lt;code&gt;nums&lt;/code&gt;，以及一個目標 &lt;code&gt;target&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;請從 &lt;code&gt;nums&lt;/code&gt; 中找到兩個數字 s.t. 兩數之和為 &lt;code&gt;target&lt;/code&gt;，並回傳那兩數的 index。&lt;/p&gt;
&lt;h1 id=&#34;Example&#34;&gt;&lt;a href=&#34;#Example&#34; class=&#34;headerlink&#34; title=&#34;Example&#34;&gt;&lt;/a&gt;Example&lt;/h1&gt;&lt;p&gt;&lt;img data-src=&#34;fig.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;Solution&#34;&gt;&lt;a href=&#34;#Solution&#34; class=&#34;headerlink&#34; title=&#34;Solution&#34;&gt;&lt;/a&gt;Solution&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;建一個 map：&lt;ul&gt;
&lt;li&gt;key 為目前數字的 complement，即 target - 目前數字&lt;/li&gt;
&lt;li&gt;value 為目前數字的 index&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;線性掃描 &lt;code&gt;nums&lt;/code&gt;，假設目前掃描到的數字 index 為 &lt;code&gt;i&lt;/code&gt;，檢查 map 中是否存在 key = &lt;code&gt;nums[i]&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;若存在，返回兩個 index：&lt;code&gt;i&lt;/code&gt; 與 &lt;code&gt;map[nums[i]]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不存在，對 map 插入 {&lt;code&gt;target - nums[i]&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;}&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;cpp&#34;&gt;class Solution &amp;#123;
 public:
  vector&amp;lt;int&amp;gt; twoSum(vector&amp;lt;int&amp;gt;&amp;amp; nums, int target) &amp;#123;
    std::map&amp;lt;int, int&amp;gt; complementIdx;

    for (int i = 0; i &amp;lt; nums.size(); i++) &amp;#123;
        if (complementIdx.count(nums[i])) &amp;#123;
            return &amp;#123;i, complementIdx[nums[i]]&amp;#125;;
        &amp;#125;
        complementIdx.insert(&amp;#123;target - nums[i], i&amp;#125;);
    &amp;#125;

    return &amp;#123;-1, -1&amp;#125;;
  &amp;#125;
&amp;#125;;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;Complexity-Analysis&#34;&gt;&lt;a href=&#34;#Complexity-Analysis&#34; class=&#34;headerlink&#34; title=&#34;Complexity Analysis&#34;&gt;&lt;/a&gt;Complexity Analysis&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Time: O(n) - worst case 需要掃到尾才能找到答案&lt;/li&gt;
&lt;li&gt;Space: O(n) - worst case 同上, map 需要存將近 n 個 entries&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;Result&#34;&gt;&lt;a href=&#34;#Result&#34; class=&#34;headerlink&#34; title=&#34;Result&#34;&gt;&lt;/a&gt;Result&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;Runtime: 7 ms, faster than 98.41% of C++ online submissions for Two Sum.
Memory Usage: 11.2 MB, less than 18.59% of C++ online submissions for Two Sum.
&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="leetcode" />
        <updated>2022-08-21T06:05:49.000Z</updated>
    </entry>
</feed>
